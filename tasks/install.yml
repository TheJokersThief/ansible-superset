---
- name: Create superset group.
  group:
    name: "{{ superset_group }}"

- name: Create superset user.
  user:
    name: "{{ superset_user }}"
    group: "{{ superset_group }}"
    shell: "{{ superset_shell }}"
    home: "{{ superset_home }}"
    create_home: yes

- include_tasks: "install-{{ superset_python_executable }}.yml"

- name: Ensure dependencies are installed
  apt:
    pkg: ["build-essential", "libssl-dev", "libffi-dev", "libsasl2-dev", "libldap2-dev", "libmysqlclient-dev", "python-pip", "python-psycopg2", "libpq-dev"]
    state: latest
    update_cache: yes
    cache_valid_time: 600

- name: Delete the Superset virtualenv directory
  file:
    state: absent
    path: "{{ superset_virtualenv_path }}"
  when: superset_recreate_virtualenv

- name: Make sure the Superset virtualenv directory exists
  file:
    state: directory
    path: "{{ superset_virtualenv_path }}"
    owner: "{{ superset_user }}"
    group: "{{ superset_group }}"
    recurse: yes

# - name: Install global dependent pip libraries
#   pip:
#     name: ["psycopg2-binary"]
#     state: latest

- name: Install Superset dependent pip libraries
  become: true
  become_user: "{{ superset_user }}"
  pip:
    name: ["setuptools", "psycopg2-binary", "mysql", "Flask-OAuthlib"]
    state: latest
    virtualenv: "{{ superset_virtualenv_path }}"
    virtualenv_python: "{{ superset_python_executable }}"

- name: Install superset patchup (ketchup)
  pip:
    name: 'git+{{ superset_ketchup_git_url }}@{{ superset_ketchup_version }}'
    state: latest
    virtualenv: "{{ superset_virtualenv_path }}"
    virtualenv_python: "{{ superset_python_executable }}"
  when: superset_use_ketchup

- name: Install flask_cors
  pip:
    name: flask_cors
    state: latest
    virtualenv: "{{ superset_virtualenv_path }}"
    virtualenv_python: "{{ superset_python_executable }}"
  when: superset_enable_cors

- name: Create postgres database
  postgresql_db:
    name: "{{ superset_postgres_db_name }}"
    login_host: "{{ superset_postgres_db_host }}"
    login_user: "{{ superset_postgres_login_user }}"
    login_password: "{{ superset_postgres_login_password }}"
  tags: [ database ]

- name: Create postgres user
  postgresql_user:
    name: "{{ superset_postgres_db_user }}"
    password: "{{ superset_postgres_db_pass }}"
    encrypted: true
    db: "{{ superset_postgres_db_name }}"
    login_host: "{{ superset_postgres_db_host }}"
    login_user: "{{ superset_postgres_login_user }}"
    login_password: "{{ superset_postgres_login_password }}"
  tags: [ database ]

- name: Install superset
  become: true
  become_user: "{{ superset_user }}"
  pip:
    name: superset
    version: "{{ superset_version }}"
    virtualenv: "{{ superset_virtualenv_path }}"
    virtualenv_python: "{{ superset_python_executable }}"

- name: Install additional packages
  pip:
    name: "{{ superset_additional_pip_packages }}"
    virtualenv: "{{ superset_virtualenv_path }}"
    virtualenv_python: "{{ superset_python_executable }}"
  when: superset_install_additional_pip_packages

- name: Make sure the superset upload directories exists
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
    owner: "{{ superset_user }}"
    group: "{{ superset_group }}"
  with_items:
    - "{{ superset_img_upload_dir }}"
    - "{{ superset_upload_dir }}"
