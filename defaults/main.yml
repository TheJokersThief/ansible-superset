# the pip version of superset to deploy
superset_version: 0.28.1

# the python executable to install superset using
superset_python_executable: "python3.6"

# the application secret key
superset_secret_key: REPLACE\2\1thisismyscretkey\1\2\e\y\y\h

# available languages
superset_languages:
    - key: en
      flag: us
      name: English
    - key: it
      flag: it
      name: Italian
    - key: fr
      flag: fr
      name: French
    - key: zh
      flag: cn
      name: Chinese
    - key: ja
      flag: jp
      name: Japanese

# web UI details
superset_username: admin
superset_firstname: Superset
superset_lastname: Admin
superset_email: techops+superset@ona.io
superset_pass: REPLACEaVnwiLmc489m13

# web application configuration
superset_recreate_virtualenv: False
superset_app: superset
superset_flask_secret_key: REPLACEalhD4LIU4Ssn6
superset_port: 8888
superset_workers: 2
superset_mapbox_api_key: REPLACE
superset_load_examples: true
superset_allowed_extensions:
  - csv

# database credentials
superset_postgres_db_host: localhost
superset_postgres_db_port: 5432
superset_postgres_db_name: superset
superset_postgres_db_user: superset
superset_postgres_db_pass: REPLACEHS&y7834yKDSd

# whether to check if the superset service is running
superset_check_if_running: True

# whether to restart superset after making changes; default is True, for a cluster you may wish to disable
superset_perform_restart: True

# whether to force a restart, useful if another role has made changes (such as updating a custom nar); default is False
superset_force_restart: False

# authentication configuration
superset_auth_type: AUTH_DB
superset_oauth_providers:
superset_service_env_vars:
# allow user self registration
superset_auth_user_registration: False
# default role when user self registers
superset_auth_user_registration_role: Public

# white labelling
superset_white_label: False
superset_white_label_use_base64: False
superset_white_label_use_filepaths: False

# base64 encoded superset branding images
superset_favicon_base64:
superset_logo_base64:
superset_2x_logo_base64:

# file paths to superset branding images
superset_favicon_path:
superset_logo_path:
superset_2x_logo_path:
superset_app_name: "Superset"
superset_postgres_login_user: "postgres"
superset_postgres_login_password: ""

# upload directories
superset_upload_dir: "{{ superset_home }}/uploads/"
superset_img_upload_dir: "{{ superset_home }}/images/"

# config path
superset_config_module_path: "{{ superset_python_path }}/superset_config.py"

# Allow for javascript controls components
# this enables programmers to customize certain charts (like the
# geospatial ones) by inputing javascript in controls. This exposes
# an XSS security vulnerability
superset_enable_javascript_controls: False

# cors
superset_enable_cors: False
# CORS options
# needs to be set as a Python dictionary, like so:
# superset_cors_options: |
#   {
#      "origins": "*",
#      "methods": "GET",
#      "allow_headers": "Custom-Api-Token",
#      "supports_credentials": True
#   }
superset_cors_options:

# HTTP headers
# needs to be set as a Python dictionary, like so:
# superset_http_headers: |
#   {
#     'X-Frame-Options': 'SAMEORIGIN'
#   }
superset_http_headers:

# Extract and use X-Forwarded-For/X-Forwarded-Proto headers?
superset_enable_proxy_fix: False

# additional python packages installed after Superset is installed
superset_additional_pip_packages: []
superset_install_additional_pip_packages: False

# superset patchup (ketchup)
superset_use_ketchup: False
superset_ketchup_git_url: "https://github.com/onaio/superset-patchup.git"
superset_ketchup_version: "master"

# Add custom superset roles
superset_add_custom_roles: False
# This needs to be a Python dictionary defined like so:
# superset_custom_roles: |
#   {
#     'Custom_Role_1': {'all_datasource_access'},
#     'Custom_Role_2': {'all_datasource_access', 'SQL Lab'},
#     'ROLE_NAME': {'PERMISSION1', 'PERMISSION2'}
#   }
superset_custom_roles: